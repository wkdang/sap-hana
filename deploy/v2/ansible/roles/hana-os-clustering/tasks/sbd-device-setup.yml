---

- name: Enable iscsid, iscsi, sbd
  service: name="{{ item }}" enabled=yes
  loop: "{{ iscsi_sbd_services | flatten(levels=1) }}"

- name: Set initiatorname
  vars:
    initiatorName: "{{ (ansible_hostname == hana_database.nodes[0].dbname) | ternary(initiator1 , initiator2) }}"
  lineinfile:
    dest: '/etc/iscsi/initiatorname.iscsi'
    regexp: '^InitiatorName=iqn'
    line: InitiatorName={{ initiatorName }}
    state: 'present'
  register: iscsi_register_initiator_name

- name: Restart iscsid
  service: name=iscsid state=restarted

- name: Restart iscsi
  service: name=iscsi state=restarted

# Connect the iSCSI devices
- name: Discover targets on portals, set connecting, mark targets to auto start
  shell: >
    iscsiadm -m discovery --type=st --portal={{ item }}:{{ iscsi_port }};
    iscsiadm -m node -T {{ target }} --login --portal={{ item }}:{{ iscsi_port }};
    iscsiadm -m node -p {{ item }}:{{ iscsi_port }} --op=update --name=node.startup --value=automatic;
  loop: "{{ groups['iscsi'] }}" 
  register: login_iscsi_device

- debug:
    msg: "{{ login_iscsi_device }}"

- name: Call lsscsi and get devices names
  shell: lsscsi -l | grep {{ storage_object }} | awk '{ print $6; }' | grep -oP "^/dev/\K.*"
  register: iscsi_devices_names

- debug:
    msg: "{{ iscsi_devices_names }}"

- name: Get disk with correct disk-id
  shell: ls -l /dev/disk/by-id/scsi-* | grep "{{ item }}" | grep scsi-3 | awk '{ print $9; }'
  loop: "{{ iscsi_devices_names.stdout_lines }}"
  register: iscsi_devices_ids

- debug:
    msg: "{{ iscsi_devices_ids }}"

- set_fact: 
    sbd_devices: "{{ item.stdout }};{{ sbd_devices | default('') }}"
  loop: "{{ iscsi_devices_ids.results }}"
    
# what does these numbers mean?
- name: Create corosync sbd device
  command: sbd -d "{{ item.stdout }}" -1 60 -4 120 create
  loop: "{{ iscsi_devices_ids.results }}"
  when: iscsi_devices_ids is not failed

- name: Adapt the SBD config to have device
  lineinfile:
    dest: '/etc/sysconfig/sbd'
    regexp: 'SBD_DEVICE='
    line: "SBD_DEVICE=\"{{ sbd_devices }}\""
    state: 'present'
  register: device_added

- name: Adapt the SBD config to have pacemaker enabled
  lineinfile:
    dest: '/etc/sysconfig/sbd'
    regexp: 'SBD_PACEMAKER='
    line: "SBD_PACEMAKER=yes"
    state: 'present'
  register: pacemaker_enabled

- name: Adapt the SBD config to have SDB startmode set to always
  lineinfile:
    dest: '/etc/sysconfig/sbd'
    regexp: 'SBD_STARTMODE='
    line: "SBD_STARTMODE=always"
    state: 'present'
  register: startmode_set
  
- name: Create softdog config
  shell: echo softdog | sudo tee /etc/modules-load.d/softdog.conf
  register: softdog_config

- debug:
    msg: "{{ softdog_config }}"

- name: Load the softdog module
  shell: modprobe -v softdog
  register: load_softdog

- debug:
    msg: "{{ load_softdog }}"
