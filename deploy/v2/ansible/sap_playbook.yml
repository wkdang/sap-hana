---

- hosts: localhost
  become: true
  become_user: root
  pre_tasks:
    - name: Include output JSON
      include_vars:
        file: "{{ inventory_dir }}/output.json"
        name: output

    - name: Create dictionary with HANA database inforamtion from output.JSON
      set_fact:
        hana_database: "{{ item }}"
      loop: "{{ output.databases|flatten(levels=1) }}"
      when: item.platform == 'HANA'

# Prepare os, disks and mount points on Hana Database servers
- hosts: hanadbnodes
  become: true
  become_user: root
  vars_files:
    - "vars/packages.yml"
  pre_tasks:
    - name: Include SAP HANA DB sizes
      include_vars:
        file: ../hdb_sizes.json
        name: hdb_sizes
  roles:
    - role: os-preparation
    - role: os-disk-setup
    - role: enable-prometheus
      when:
        - output.options.enable_prometheus == True
        - ansible_facts['distribution_file_variety'] == 'SUSE'
        - ansible_facts['distribution_version'] is regex("(12\.[3-5]|15\.\d)")
        - hana_database.size != "LargeInstance"

# Mount Azure File share on all linux jumpboxes including rti
- hosts: localhost:jumpboxes_linux
  become: true
  become_user: root
  roles:
    - role: mount-azure-files
      when: output.software.storage_account_sapbits.file_share_name != ""

# Mount Azure File share on all hanadbnodes. When the scenario is Large Instance, this task will be skipped
- hosts: hanadbnodes
  become: true
  become_user: root
  roles:
    - role: mount-azure-files
      when:
        - output.software.storage_account_sapbits.file_share_name != ""
        - hana_database.size != "LargeInstance"

# Download SAP Media on Azure File Share
- hosts: localhost
  become: true
  become_user: root
  roles:
    - role: sap-media-download

# When scenario is Large Instance, sap bits will be transferred to hanadbnodes
- hosts: hanadbnodes
  become: true
  become_user: root
  tasks:
  - include_role:
      name: sap-media-transfer
      tasks_from: media_hanadbnode_copy.yml
    when: hana_database.size == "LargeInstance"

- hosts: iscsi
  become: true
  become_user: root
  roles:
   - role: iscsi-target-install
     when: 
       - hana_database.high_availability
       - groups['iscsi'] | length > 0

# Hana DB components install
- hosts: hanadbnodes
  become: true
  become_user: root
  any_errors_fatal: true
  vars_files:
    - "vars/ha-packages.yml"
  roles:
    - role: hdb-server-install
    - role: hana-system-replication
      when: hana_database.high_availability
      vars:
        sid: "{{ hana_database.instance.sid }}"
        instance_number: "{{ hana_database.instance.instance_number }}"
        hana_system_user_password: "{{ hana_database.credentials.db_systemdb_password }}"
    - role: hana-os-clustering
      when: hana_database.high_availability
      vars:
        ha_cluster_password: "{{ hana_database.credentials.ha_cluster_password }}"
        sap_hana_fencing_agent_subscription_id: "{{ lookup('env', 'SAP_HANA_FENCING_AGENT_SUBSCRIPTION_ID') }}"
        sap_hana_fencing_agent_tenant_id: "{{ lookup('env', 'SAP_HANA_FENCING_AGENT_TENANT_ID') }}"
        sap_hana_fencing_agent_client_id: "{{ lookup('env', 'SAP_HANA_FENCING_AGENT_CLIENT_ID') }}"
        sap_hana_fencing_agent_client_password: "{{ lookup('env', 'SAP_HANA_FENCING_AGENT_CLIENT_SECRET') }}"

# Linux jumpboxes components install
- hosts: jumpboxes_linux
  become: true
  become_user: root
  roles:
    - role: linux-jumpboxes-install

# Windows jumpboxes components install
- hosts: jumpboxes_windows
  roles:
    - role: windows-jumpboxes-install
